from sqlalchemy import create_engine, Column, Integer, Boolean, DateTime
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from datetime import datetime

Base = declarative_base()
engine = create_engine('sqlite:///malware_detector.db', echo=True)
Session = sessionmaker(bind=engine)

class Detection(Base):
    __tablename__ = 'detections'

    id = Column(Integer, primary_key=True)
    is_malware = Column(Boolean)
    timestamp = Column(DateTime, default=datetime.utcnow)

def init_db():
    Base.metadata.create_all(engine)

def add_detection(is_malware: bool):
    session = Session()
    new_detection = Detection(is_malware=is_malware)
    session.add(new_detection)
    session.commit()
    session.close()

    
def get_detection_stats():
    session = Session()
    total = session.query(Detection).count()
    malware = session.query(Detection).filter(Detection.is_malware == True).count()
    benign = total - malware
    session.close()
    return {'total': total, 'malware': malware, 'benign': benign}