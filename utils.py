import logging
from werkzeug.utils import secure_filename

def setup_logging():
    logging.basicConfig(level=logging.INFO,
                        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                        filename='app.log',
                        filemode='a')
    return logging.getLogger(__name__)

def validate_file(file):
    if file.size > 100 * 1024 * 1024:  # 100MB limit
        raise ValueError("File size exceeds the limit of 100MB.")

    filename = secure_filename(file.name)
    if not filename.lower().endswith(('.pcap', '.pcapng')):
        raise ValueError("Invalid file type. Only PCAP and PCAPNG files are allowed.")

    return True



# import logging
# import os
# from werkzeug.utils import secure_filename

# def setup_logging():
#     """
#     Set up logging configuration.
#     """
#     logging.basicConfig(level=logging.INFO,
#                         format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
#                         filename='app.log',
#                         filemode='a')
#     return logging.getLogger(__name__)

# logger = setup_logging()

# def validate_file(file):
#     """
#     Validate the uploaded file.
#     """
#     # Check file size (e.g., limit to 10MB)
#     if file.size > 10 * 1024 * 1024:
#         raise ValueError("File size exceeds the limit of 10MB.")

#     # Check file extension
#     filename = secure_filename(file.name)
#     if not filename.lower().endswith(('.pcap', '.pcapng')):
#         raise ValueError("Invalid file type. Only PCAP and PCAPNG files are allowed.")

#     logger.info(f"File '{filename}' passed validation.")

# def ensure_directories_exist():
#     """
#     Ensure that necessary directories exist.
#     """
#     directories = ['data', 'models']
#     for directory in directories:
#         if not os.path.exists(directory):
#             os.makedirs(directory)
#             logger.info(f"Created directory: {directory}")

# # Call this function to ensure directories exist
# ensure_directories_exist()